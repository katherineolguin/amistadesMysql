
Aplica ingeniería avanzada al esquema_amistades del capítulo anterior

--Consulta: crea 6 usuarios nuevos--
SELECT * FROM frienship_shema.users;

INSERT INTO frienship_shema.users (id, frist_name, last_name) VALUE ('1', 'vale' ,'rojas');
INSERT INTO frienship_shema.users (frist_name, last_name) VALUE ('Seba' ,'Lagos');
INSERT INTO frienship_shema.users (frist_name, last_name) VALUE ('Cristobal' ,'Trujillos');
INSERT INTO frienship_shema.users (frist_name, last_name) VALUE ('Kathy' ,'Cabezas');
INSERT INTO frienship_shema.users (frist_name, last_name) VALUE ('Joaquin' ,'Ureta');
INSERT INTO frienship_shema.users (frist_name, last_name) VALUE ('Javiera' ,'Suazo');



--Consulta: haz que el usuario 1 sea amigo del usuario 2, 4 y 6--
SELECT * FROM frienship_shema.friendship;

INSERT INTO frienship_shema.friendship (user_id, users_id1) VALUES (1,2), (1,4), (1,6);


--Consulta: haz que el usuario 2 sea amigo del usuario 1, 3 y 5--

INSERT INTO frienship_shema.friendship (user_id, users_id1) VALUES (2,1), (2,3), (2,5);



--Consulta: haz que el usuario 3 sea amigo del usuario 2 y 5--


INSERT INTO frienship_shema.friendship (user_id, users_id1) VALUES (3,2), (3,5);



--Consulta: haz que el usuario 4 sea amigo del usuario 3--

INSERT INTO frienship_shema.friendship (user_id, users_id1) VALUES (4,3);


--Consulta: haz que el usuario 5 sea amigo del usuario 1 y 6--

INSERT INTO frienship_shema.friendship (user_id, users_id1) VALUES (1,6);


--Consulta: haz que el usuario 6 sea amigo del usuario 2 y 3--

INSERT INTO frienship_shema.friendship (user_id, users_id1) VALUES (2,3);


--Consulta: muestra las relaciones creadas como se muestra en la imagen de arriba--

SELECT * FROM frienship_shema.users
JOIN frienship_shema.friendship ON users.id = friendship.user_id
LEFT JOIN frienship_shema.users as users2 ON users2.id = friendship.users_id1;  


--Consulta NINJA: Devuelve todos los usuarios que son amigos del primer usuario, asegúrate de que sus nombres se muestren en los resultados--

SELECT * FROM frienship_shema.users
JOIN frienship_shema.friendship ON users.id = friendship.user_id
LEFT JOIN frienship_shema.users as users2 ON users2.id = friendship.users_id1
WHERE user_id=1;

--Consulta NINJA: Devuelve el recuento de todas las amistades--

SELECT count(*) AS friendship FROM frienship_shema.friendship;



--Consulta NINJA: averigua quién tiene más amigos y devuelve la cuenta de sus amigos.--

SELECT user_id, COUNT(users_id1) AS total_friendship FROM frienship_shema.friendship
GROUP BY user_id
limit 3;



--Consulta NINJA: Devuelve los amigos del tercer usuario en orden alfabético--

SELECT * FROM frienship_shema.users
JOIN frienship_shema.friendship ON users.id = friendship.user_id
LEFT JOIN frienship_shema.users as users2 ON users2.id = friendship.users_id1
WHERE user_id=3
ORDER BY users2.frist_name;